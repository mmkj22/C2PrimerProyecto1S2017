/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Graphik.NodoGK;
import Graphik.Resultado;
import java.awt.Font;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kristhal
 */
public class TablaResultados extends javax.swing.JFrame {

    public DefaultTableModel modelo = new DefaultTableModel();
    /**
     * Creates new form TablaResultados
     */
    public TablaResultados() {
        initComponents();
        tableRes.setModel(modelo);
        tableRes.setFont(new Font("Segoe UI", Font.PLAIN, 12));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableRes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Resultados");

        tableRes.setModel(modelo);
        jScrollPane1.setViewportView(tableRes);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(474, 276));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TablaResultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TablaResultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TablaResultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TablaResultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TablaResultados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tableRes;
    // End of variables declaration//GEN-END:variables
    
    public void cargarModeloDonde(NodoGK nodo, Resultado filtro, Resultado resultado, List<Integer>columnas)
    {
        modelo.addColumn("Donde");
        modelo.addColumn(sacarEncabezado(nodo, columnas));
        Object fila[] = new Object[2];
        if(filtro.tipogk.equalsIgnoreCase("cadena"))
        {
            fila[0]= filtro.valorgk;
        }
        else if(filtro.tipogk.equalsIgnoreCase("entero"))
        {
            fila[0]= filtro.valgk;
        }
        else if(filtro.tipogk.equalsIgnoreCase("decimal"))
        {
            fila[0]= filtro.valDoble;
        }       
        if(resultado.tipogk.equalsIgnoreCase("cadena"))
        {
            fila[1]= resultado.valorgk;
        }
        else if(resultado.tipogk.equalsIgnoreCase("entero"))
        {
            fila[1]= resultado.valgk;
        }
        else if(resultado.tipogk.equalsIgnoreCase("decimal"))
        {
            fila[1]= resultado.valDoble;
        }
        modelo.addRow(fila);
    }

    private String sacarEncabezado(NodoGK nodo, List<Integer> columnas)
    {
        String cadena = "";
        int contador = 0;
        if(nodo.hijos.get(0).valor.equalsIgnoreCase("LLAMDA_MET_DATOS"))
        {
            cadena+="llamar "+nodo.hijos.get(0).hijos.get(0).valor + "(";
            for(NodoGK n : nodo.hijos.get(0).hijos.get(1).hijos)
            {
                if(contador==0){
                    cadena+="columna("+columnas.get(contador)+")";
                }
                else
                {
                    cadena+=", columna("+columnas.get(contador)+")";
                }
                contador++;
            }
            cadena+=")";
        }
        else
        {
            cadena+="llamarHK "+nodo.hijos.get(0).hijos.get(0).valor + "(";
            for(NodoGK n : nodo.hijos.get(0).hijos.get(1).hijos)
            {
                if(contador==0){
                    cadena+="columna("+columnas.get(contador)+")";
                }
                else
                {
                    cadena+=", columna("+columnas.get(contador)+")";
                }
                contador++;
            }
            cadena+=")";
        }
        return cadena;
    }

}
